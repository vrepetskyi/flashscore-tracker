# This file is an example. Do the following:

# 1. Copy it and rename to .env
# 2. Set strong passwords
# 3. Check if the default setting are suitable
# 3. Set Sentry DSN for error monitoring

# In development mode, the databases are expected to be available on localhost with default users and ports.
# You may start them with docker-compose.yml or use SSH tunnelling to use some remote ones.

# For production, everything is handled by docker-compose.prod.yml.
# There is no need to set NODE_ENV, POSTGRES_URL, and REDIS_URL explicitly.

NODE_ENV=development
PORT=8080

POSTGRES_PASSWORD=postgres
POSTGRES_URL=postgresql://postgres:postgres@localhost:5432/postgres

REDIS_PASSWORD=redis
REDIS_URL=redis://:redis@localhost:6379

KEEP_LOGS_DAYS=14
SCRAPING_INTERVAL_MINUTES=30
REDIS_CACHE_MINUTES=1
BROWSER_CACHE_MINUTES=1

SCRAPING_MAX_TABS=10
CLEANUP_STARTED_MATCHES=true

SENTRY_DSN=https://your-sentry-dsn
